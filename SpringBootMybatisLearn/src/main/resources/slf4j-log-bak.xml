<?xml version="1.0" encoding="UTF-8"?>
<!-- 级别从高到低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->
<!-- 日志输出规则 根据当前ROOT 级别，日志输出时，级别高于root默认的级别时 会输出 -->
<!-- 以下 每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，通过filter 过滤只记录本级别的日志 -->
<!-- scan 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 -->
<!-- scanPeriod 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!-- 动态日志级别 -->
	<jmxConfigurator />

	<!-- 定义日志文件 输出位置 
	<property name="LOG_HOME" value="${catalina.home}/logs/Push.log" />-->

	<!-- 日志最大的历史 20天 -->
	<property name="maxHistory" value="90" />
	<!-- 最大文档滚动限制 -->
	<!-- <property name="maxFileSize" value="500MB" /> -->

	<!-- ConsoleAppender 控制台输出日志 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>
				%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger - %msg%n 
			</pattern>
		</encoder>
	</appender> 
 	<!--<root level="DEBUG">          
    	<appender-ref ref="console" />
  	</root> -->
  	
  	
  	<appender name="USER_LOGIN_LOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 过滤器，只记录WARN级别的日志 -->
		<!-- 果日志级别等于配置级别，过滤器会根据onMath 和 onMismatch接收或拒绝日志。 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<!-- 设置过滤级别 -->
			<level>DEBUG</level>
			<!-- 用于配置符合过滤条件的操作 -->
			<onMatch>ACCEPT</onMatch>
			<!-- 用于配置不符合过滤条件的操作 -->
			<onMismatch>DENY</onMismatch>
		</filter>
		<!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志输出位置 可相对、和绝对路径 -->
			<fileNamePattern>logs/SpringBootMybatisLearn/%d{yyyy-MM-dd}/User-Login-log.log
			</fileNamePattern>
			<!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件假设设置每个月滚动，且<maxHistory>是6， 则只保存最近6个月的文件，删除之前的旧文件。注意，删除旧文件是，那些为了归档而创建的目录也会被删除 -->
			<maxHistory>${maxHistory}</maxHistory>
			
			<!-- <maxFileSize>${maxFileSize}</maxFileSize> -->
		</rollingPolicy>
		
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			
		</triggeringPolicy>
		
		<encoder>
			<pattern>
				<!-- 设置日志输出格式 -->
				%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger - %msg%n
			</pattern>
		</encoder>
	</appender>
	
	
	<!-- 下面是打印 mybatis语句的配置 -->  
    <logger name="com.ibatis" additivity="true">  
        <level value="DEBUG" />  
        <appender-ref ref="console" />
        <appender-ref ref="USER_LOGIN_LOG"/>
    </logger>  
  
    <logger name="java.sql.Connection" additivity="true">  
        <level value="DEBUG" />  
        <appender-ref ref="console" />
        <appender-ref ref="USER_LOGIN_LOG"/>
    </logger>  
  
    <logger name="java.sql.Statement" additivity="true"> 
        <level value="DEBUG" />  
        <appender-ref ref="console" />
        <appender-ref ref="USER_LOGIN_LOG"/>
    </logger>  
  
    <logger name="java.sql.PreparedStatement" additivity="true"> 
    	<level value="DEBUG" />  
        <appender-ref ref="console" />
        <appender-ref ref="USER_LOGIN_LOG"/>
    </logger>  
  
    <logger name="java.sql.ResultSet" additivity="true">  
        <level value="DEBUG" />  
        <appender-ref ref="console" />
        <appender-ref ref="USER_LOGIN_LOG"/>
    </logger>  
  
	<root level="DEBUG">
	    <appender-ref ref="console" />
        <appender-ref ref="USER_LOGIN_LOG"/>
        <!--<appender-ref ref="FILE"/>-->
        <!-- <appender-ref ref="dailyRollingFileAppender"/> -->
    </root>

</configuration>